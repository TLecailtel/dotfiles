#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/tlecailtel/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/tlecailtel/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/tlecailtel/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/tlecailtel/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<


# Press capital Q to "cd on quit" ranger
function ranger {
    local IFS=$'\t\n'
    local tempfile="$(mktemp -t tmp.XXXXXX)"
    local ranger_cmd=(
        command
        ranger
        --cmd="map Q chain shell echo %d > "$tempfile"; quitall"
    )

    ${ranger_cmd[@]} "$@"
    if [[ -f "$tempfile" ]] && [[ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]]; then
        cd -- "$(cat "$tempfile")" || return
    fi
    command rm -f -- "$tempfile" 2>/dev/null
}
alias n=ranger


# Autologout on consoles
if [[ "$(tty)" =~ /dev/tty[0-9] ]]; then export TMOUT=900;fi


# Activate kubectl auto-completion for zsh
[[ $commands[kubectl] ]] && source <(kubectl completion zsh)


# Show hidden files in zsh completion
compinit
_comp_options+=(globdots)


# Add kubectl context & namespace to prompt
autoload -U colors; colors
source ~/kubectl.zsh


# Make diff look like git diff
alias diff='colordiff -u'


# Confirmation prompt
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'


# Reverse mv
mvr () {
    mv $2 $1
}


# Create a directory and cd into it
mcd() {
    mkdir "${1}" && cd "${1}"
}


# Go up [n] directories
up() {
    local cdir="$(pwd)"
    if [[ "${1}" == "" ]]; then
        cdir="$(dirname "${cdir}")"
    elif ! [[ "${1}" =~ ^[0-9]+$ ]]; then
        echo "Error: argument must be a number"
    elif ! [[ "${1}" -gt "0" ]]; then
        echo "Error: argument must be positive"
    else
        for ((i=0; i<${1}; i++)); do
            local ncdir="$(dirname "${cdir}")"
            if [[ "${cdir}" == "${ncdir}" ]]; then
                break
            else
                cdir="${ncdir}"
            fi
        done
    fi
    cd "${cdir}"
}


alias my_ip='curl ifconfig.me'


set_proxy () {
    export http_proxy=http://your_proxy;
    export https_proxy=$http_proxy;
    echo "http_proxy and https_proxy set to: $http_proxy"
}


unset_proxy () {
    unset http_proxy;
    unset https_proxy;
    echo 'http_proxy and https_proxy successfully unset'
}
